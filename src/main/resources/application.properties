# DATABASE CONFIGURATION
spring.jpa.hibernate.ddl-auto=update

# MYSQL CONFIGURATION
spring.jpa.database=mysql
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.datasource.url=jdbc:mysql://localhost:3306/task_crud?serverTimezone=Europe/Warsaw&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=cezaryjanicki
spring.datasource.password=cezaryjanicki00

# POSTGRESQL CONFIGURATION
#spring.jpa.database=postgresql
#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}

# TRELLO KEYS
trello.api.endpoint.prod=https://api.trello.com/1
trello.app.key=47db89560fd287066743cbb02a7dd176
trello.app.token=e9682863b388458415f77e016c7c68af27d480d7dae4d2f0a1585c902982791c

#MAIL CONFIGURATION
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${GOOGLE_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.transport.protocol=smtp
spring.mail.properties.mail.debug=true

#ADMINISTRATION
admin.mail = ${MAIL_USERNAME}
username=kodilla
admin.name=Cezary Janicki

#ACTUATOR INFO
management.endpoints.web.exposure.include=*
info.app.name=Tasks (CRUD implementing Trello API) Application
info.app.description=Application has been created on Kodilla course!
info.app.version=1.0.0
info.app.owner.name=Cezary
info.app.owner.surname=Janicki
info.app.administrator.email=cezary.janicki@gmail.com
info.app.administrator.address.street=Jezycka
info.app.administrator.address.number=43
info.company.name=Paikeia Sp. z o.o.
info.company.goal=Our goal is to provide top-class programming solution for SME
info.company.email=paikeia@paikeia.pl
info.company.phone=+48504153694
